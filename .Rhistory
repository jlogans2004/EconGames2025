geom_col() +  # scatter plot of actual data
geom_smooth(method = "lm", se = FALSE) +  # regression lines
scale_fill_manual(name = "After Additions",
values = c("0" = "blue", "1" = "red"),
labels = c("Before", "After")) +
theme_minimal() +
labs(title = "Sales Over Time with Regression Discontinuity",
x = "Month",
y = "Sales")
ggplot(grouped_sales_data2, aes(x = Month, y = sales, fill = as.factor(after_additions), color = as.factor(after_additions))) +
geom_col() +  # scatter plot of actual data
geom_smooth(method = "lm", se = FALSE) +  # regression lines
scale_fill_manual(name = "After Additions",
values = c("0" = "blue", "1" = "red"),
labels = c("Before", "After")) +
theme_minimal() +
labs(title = "Sales Over Time with Regression Discontinuity",
x = "Month",
y = "Sales")
ggplot(grouped_sales_data2, aes(x = Month, y = sales, fill = as.factor(after_additions), color = as.factor(after_additions))) +
geom_col() +  # scatter plot of actual data
geom_smooth(method = "lm", se = FALSE) +  # regression lines
scale_fill_manual(name = "After Additions",
values = c("0" = "blue", "1" = "red"),
labels = c("Before", "After")) +
theme_minimal() +
scale_color_manual(name="After Additions")
ggplot(grouped_sales_data2, aes(x = Month, y = sales, fill = as.factor(after_additions), color = as.factor(after_additions))) +
geom_col() +  # scatter plot of actual data
geom_smooth(method = "lm", se = FALSE) +  # regression lines
scale_fill_manual(name = "After Additions",
values = c("0" = "blue", "1" = "red"),
labels = c("Before", "After")) +
theme_minimal() +
scale_color_manual(name="After Additions", values=c("blue", "red")) +
labs(title = "Sales Over Time with Regression Discontinuity",
x = "Month",
y = "Sales")
ggplot(grouped_sales_data2, aes(x = Month, y = sales, fill = as.factor(after_additions), color = as.factor(after_additions))) +
geom_col() +  # scatter plot of actual data
geom_smooth(method = "lm", se = FALSE, color = as.factor(after_additions))) +  # regression lines
ggplot(grouped_sales_data2, aes(x = Month, y = sales, fill = as.factor(after_additions), color = as.factor(after_additions))) +
geom_col() +  # scatter plot of actual data
geom_smooth(method = "lm", se = FALSE, color = as.factor(after_additions)) +  # regression lines
scale_fill_manual(name = "After Additions",
values = c("0" = "blue", "1" = "red"),
labels = c("Before", "After")) +
theme_minimal() +
scale_color_manual(name="After Additions", values=c("blue", "red")) +
labs(title = "Sales Over Time with Regression Discontinuity",
x = "Month",
y = "Sales")
ggplot(grouped_sales_data2, aes(x = Month, y = sales, fill = as.factor(after_additions), color = as.factor(after_additions))) +
geom_col() +  # scatter plot of actual data
geom_smooth(method = "lm", se = FALSE, aes(color = as.factor(after_additions))) +  # regression lines
scale_fill_manual(name = "After Additions",
values = c("0" = "blue", "1" = "red"),
labels = c("Before", "After")) +
theme_minimal() +
scale_color_manual(name="After Additions", values=c("blue", "red")) +
labs(title = "Sales Over Time with Regression Discontinuity",
x = "Month",
y = "Sales")
ggplot(grouped_sales_data2, aes(x = Month, y = sales, fill = as.factor(after_additions))) +
geom_col() +  # scatter plot of actual data
geom_smooth(method = "lm", se = FALSE, aes(color = as.factor(after_additions))) +  # regression lines
scale_fill_manual(name = "After Additions",
values = c("0" = "blue", "1" = "red"),
labels = c("Before", "After")) +
theme_minimal() +
scale_color_manual(name="After Additions", values=c("blue", "red")) +
labs(title = "Sales Over Time with Regression Discontinuity",
x = "Month",
y = "Sales")
ggplot(grouped_sales_data2, aes(x = Month, y = sales, fill = as.factor(after_additions))) +
geom_col(color='black') +  # scatter plot of actual data
geom_smooth(method = "lm", se = FALSE, aes(color = as.factor(after_additions))) +  # regression lines
scale_fill_manual(name = "After Additions",
values = c("0" = "blue", "1" = "red"),
labels = c("Before", "After")) +
theme_minimal() +
scale_color_manual(name="After Additions", values=c("blue", "red")) +
labs(title = "Sales Over Time with Regression Discontinuity",
x = "Month",
y = "Sales")
dataforpie <- data %>% filter(Entry_dummy==TRUE, location %in% c("Mercer", "Washington Park", "Ziegler", "Fountain Square")))
dataforpie <- data %>% filter(Entry_dummy==TRUE, location %in% c("Mercer", "Washington Park", "Ziegler", "Fountain Square"))
ggplot(dataforpie) + geom_bar(aes(x=parking_type))
ggplot(dataforpie) + geom_bar(aes(x=parking_type)) + coord_polar()
ggplot(dataforpie) + geom_bar(aes(x="", y=parking_type), stat="identity", width=1) + coord_polar()
ggplot(dataforpie) + geom_bar(aes(x="", y=parking_type), stat="identity", width=1) + coord_polar("y", start=0)
ggplot(dataforpie) + geom_bar(aes(x="", y=parking_type, fill=group), stat="identity", width=1) + coord_polar("y", start=0)
ggplot(dataforpie) + geom_bar(aes(x="", y=1, fill=parking_type), stat="identity", width=1) + coord_polar("y", start=0)
ggplot(dataforpie) + geom_bar(aes(x=parking_type, fill=parking_type), stat="identity", width=1) + coord_polar("y", start=0)
ggplot(dataforpie) + geom_bar(aes(x=parking_type, fill=parking_type), stat="identity", width=1) + coord_polar(start=0)
counts <- dataforpie %>% group_by(parking_type) %>% summarize(n=n())
ggplot(dataforpie) + geom_bar(aes(x=n, fill=parking_type), stat="identity", width=1) + coord_polar(start=0)
ggplot(counts) + geom_bar(aes(x=n, fill=parking_type), stat="identity", width=1) + coord_polar(start=0)
ggplot(counts) + geom_bar(aes(x="", y=n, fill=parking_type), stat="identity", width=1) + coord_polar(start=0)
ggplot(counts) + geom_bar(aes(x="", y=n, fill=parking_type), stat="identity", width=1) + coord_polar("y", start=0)
ggplot(counts) + geom_bar(aes(x="", y=n, fill=parking_type), stat="identity", width=1) + coord_polar("y", start=0) + theme_void()
ggplot(counts) + geom_bar(aes(x="", y=n, fill=parking_type), stat="identity", width=1) + coord_polar("y", start=0) + theme_void() + labs(title="", legend="")
ggplot(counts) + geom_bar(aes(x="", y=n, fill=parking_type), stat="identity", width=1) + coord_polar("y", start=0) + theme_void() + labs(title="", fill="")
ggplot(counts) + geom_bar(aes(x="", y=n, fill=parking_type), stat="identity", width=1) + coord_polar("y", start=0) + theme_void() + labs(title="Over-The-Rhine", fill="Parking Type")
ggplot(counts) + geom_bar(aes(x="", y=n, fill=parking_type), stat="identity", width=1) + coord_polar("y", start=0) + theme_void() + labs(title="Over-The-Rhine Parking Types", fill="Parking Type")
ggplot(counts) + geom_bar(aes(x="", y=n, fill=parking_type), stat="identity", width=1) + coord_polar("y", start=0) + theme_void() + labs(title="Over-The-Rhine Parking Types", fill="Parking Type") theme(plot.title = element_text(hjust = 0.5))
ggplot(counts) + geom_bar(aes(x="", y=n, fill=parking_type), stat="identity", width=1) + coord_polar("y", start=0) + theme_void() + labs(title="Over-The-Rhine Parking Types", fill="Parking Type") + theme(plot.title = element_text(hjust = 0.5))
ggplot(counts) + geom_bar(aes(x="", y=n, fill=parking_type), stat="identity", width=1) + coord_polar("y", start=0) + theme_void() + labs(title="Over-The-Rhine Parking Distribution", fill="Parking Type") + theme(plot.title = element_text(hjust = 0.5))
cbrdata <- data %>% filter(Entry_dummy=TRUE, !location %in% c("Mercer", "Washington Park", "Ziegler", "Fountain Square"))
cbrcounts <- cbrdata %>% group_by(parking_type) %>% summarize(n=n())
ggplot(cbrcounts) + geom_bar(aes(x="", y=n, fill=parking_type), stat="identity", width=1) + coord_polar("y", start=0) + theme_void() + labs(title="Over-The-Rhine Parking Distribution", fill="Parking Type") + theme(plot.title = element_text(hjust = 0.5))
ggplot(counts) + geom_bar(aes(x="", y=n, fill=parking_type), stat="identity", width=1) + coord_polar("y", start=0) + theme_void() + labs(title="Over-The-Rhine Parking Distribution", fill="Parking Type") + theme(plot.title = element_text(hjust = 0.5))
cbddata <- data %>% filter(Entry_dummy=TRUE, !location %in% c("Mercer", "Washington Park", "Ziegler", "Fountain Square"))
cbdcounts <- cbddata %>% group_by(parking_type) %>% summarize(n=n())
ggplot(cbdcounts) + geom_bar(aes(x="", y=n, fill=parking_type), stat="identity", width=1) + coord_polar("y", start=0) + theme_void() + labs(title="Over-The-Rhine Parking Distribution", fill="Parking Type") + theme(plot.title = element_text(hjust = 0.5))
ggplot(cbdcounts) + geom_bar(aes(x="", y=n, fill=parking_type), stat="identity", width=1) + coord_polar("y", start=0) + theme_void() + labs(title="Central Business District Parking Distribution", fill="Parking Type") + theme(plot.title = element_text(hjust = 0.5))
cbddata <- data %>% filter(Entry_dummy=TRUE, !location %in% c("Mercer", "Washington Park", "Ziegler", "Fountain Square"))
ggplot(counts) + geom_bar(aes(x="", y=n, fill=parking_type), stat="identity", width=1) + coord_polar("y", start=0) + theme_void() + labs(title="Over-The-Rhine Parking Distribution", fill="Parking Type") + theme(plot.title = element_text(hjust = 0.5))
library(gridExtra)
install.packages("gridExtra")
ggplot(counts) + geom_bar(aes(x="", y=n, fill=parking_type), stat="identity", width=1) + coord_polar("y", start=0) + theme_void() + labs(title="Over-The-Rhine Parking Distribution", fill="Parking Type") + theme(plot.title = element_text(hjust = 0.5) legend.position = "none"))
ggplot(counts) + geom_bar(aes(x="", y=n, fill=parking_type), stat="identity", width=1) + coord_polar("y", start=0) + theme_void() + labs(title="Over-The-Rhine Parking Distribution", fill="Parking Type") + theme(plot.title = element_text(hjust = 0.5), legend.position = "none"))
ggplot(counts) + geom_bar(aes(x="", y=n, fill=parking_type), stat="identity", width=1) + coord_polar("y", start=0) + theme_void() + labs(title="Over-The-Rhine Parking Distribution", fill="Parking Type") + theme(plot.title = element_text(hjust = 0.5), legend.position = "none")
library(gridExtra)
p1 <- ggplot(counts) + geom_bar(aes(x="", y=n, fill=parking_type), stat="identity", width=1) + coord_polar("y", start=0) + theme_void() + labs(title="Over-The-Rhine Parking Distribution", fill="Parking Type") + theme(plot.title = element_text(hjust = 0.5), legend.position = "none")
p2 <- ggplot(cbdcounts) + geom_bar(aes(x="", y=n, fill=parking_type), stat="identity", width=1) + coord_polar("y", start=0) + theme_void() + labs(title="Central Business District Parking Distribution", fill="Parking Type") + theme(plot.title = element_text(hjust = 0.5))
grid.arrange(p1, p2, ncol=2)
# Convert plots to grobs
g1 <- ggplotGrob(p1)
g2 <- ggplotGrob(p2)
# Match the heights
maxHeight <- grid::unit.pmax(g1$heights, g2$heights)
g1$heights <- maxHeight
g2$heights <- maxHeight
grid.arrange(g1, g2, ncol=2)
grid.arrange(g1, g2, ncol=2)
library(cowplot)
plot_grid(p1, p2)
plot_grid(p1, p2, align='v')
library(scales)
p2 <- ggplot(cbdcounts) + geom_bar(aes(x="", y=n, fill=parking_type), stat="identity", width=1) + coord_polar("y", start=0) + theme_void() + labs(title="Central Business District Parking Distribution", fill="Parking Type") + theme(plot.title = element_text(hjust = 0.5)) + scale_fill_manual(values=show_col()(5))
p2 <- ggplot(cbdcounts) + geom_bar(aes(x="", y=n, fill=parking_type), stat="identity", width=1) + coord_polar("y", start=0) + theme_void() + labs(title="Central Business District Parking Distribution", fill="Parking Type") + theme(plot.title = element_text(hjust = 0.5)) + scale_fill_manual(values=hue_pal()(5)
p2 <- ggplot(cbdcounts) + geom_bar(aes(x="", y=n, fill=parking_type), stat="identity", width=1) + coord_polar("y", start=0) + theme_void() + labs(title="Central Business District Parking Distribution", fill="Parking Type") + theme(plot.title = element_text(hjust = 0.5)) + scale_fill_manual(values=hue_pal()(5))
p2 <- ggplot(cbdcounts) + geom_bar(aes(x="", y=n, fill=parking_type), stat="identity", width=1) + coord_polar("y", start=0) + theme_void() + labs(title="Central Business District Parking Distribution", fill="Parking Type") + theme(plot.title = element_text(hjust = 0.5)) + scale_fill_manual(values=hue_pal()(5))
plot_grid(p1, p2, align='v')
p1 <- ggplot(counts) + geom_bar(aes(x="", y=n, fill=parking_type), stat="identity", width=1) + coord_polar("y", start=0) + theme_void() + labs(title="Over-The-Rhine Parking Distribution", fill="Parking Type") + theme(plot.title = element_text(hjust = 0.5), legend.position = "none") + scale_fill_manual(values=hue_pal()(5))
p2 <- ggplot(cbdcounts) + geom_bar(aes(x="", y=n, fill=parking_type), stat="identity", width=1) + coord_polar("y", start=0) + theme_void() + labs(title="Central Business District Parking Distribution", fill="Parking Type") + theme(plot.title = element_text(hjust = 0.5)) + scale_fill_manual(values=hue_pal()(5))
plot_grid(p1, p2, align='v')
p1 <- ggplot(counts) + geom_bar(aes(x="", y=n, fill=parking_type), stat="identity", width=1) + coord_polar("y", start=0) + theme_void() + labs(title="Over-The-Rhine Parking Distribution", fill="Parking Type") + theme(plot.title = element_text(hjust = 0.5)) + scale_fill_manual(values=hue_pal()(5))
plot_grid(p1, p2, align='v')
p1 <- ggplot(counts) + geom_bar(aes(x="", y=n, fill=parking_type), stat="identity", width=1) + coord_polar("y", start=0) + theme_void() + labs(title="Over-The-Rhine Parking Distribution", fill="Parking Type") + theme(plot.title = element_text(hjust = 0.5)) + scale_fill_manual(values=hue_pal()(5)[[1, 2, 4, 5]])
p1 <- ggplot(counts) + geom_bar(aes(x="", y=n, fill=parking_type), stat="identity", width=1) + coord_polar("y", start=0) + theme_void() + labs(title="Over-The-Rhine Parking Distribution", fill="Parking Type") + theme(plot.title = element_text(hjust = 0.5)) + scale_fill_manual(values=hue_pal()(5)[1, 2, 4, 5])
p1 <- ggplot(counts) + geom_bar(aes(x="", y=n, fill=parking_type), stat="identity", width=1) + coord_polar("y", start=0) + theme_void() + labs(title="Over-The-Rhine Parking Distribution", fill="Parking Type") + theme(plot.title = element_text(hjust = 0.5)) + scale_fill_manual(values=hue_pal()(5)[,[1, 2, 4, 5])
p1 <- ggplot(counts) + geom_bar(aes(x="", y=n, fill=parking_type), stat="identity", width=1) + coord_polar("y", start=0) + theme_void() + labs(title="Over-The-Rhine Parking Distribution", fill="Parking Type") + theme(plot.title = element_text(hjust = 0.5)) + scale_fill_manual(values=hue_pal()(5)[,[1, 2, 4, 5]])
p1 <- ggplot(counts) + geom_bar(aes(x="", y=n, fill=parking_type), stat="identity", width=1) + coord_polar("y", start=0) + theme_void() + labs(title="Over-The-Rhine Parking Distribution", fill="Parking Type") + theme(plot.title = element_text(hjust = 0.5)) + scale_fill_manual(values=hue_pal()(5)[[1, 2, 4, 5]])
p1 <- ggplot(counts) + geom_bar(aes(x="", y=n, fill=parking_type), stat="identity", width=1) + coord_polar("y", start=0) + theme_void() + labs(title="Over-The-Rhine Parking Distribution", fill="Parking Type") + theme(plot.title = element_text(hjust = 0.5)) + scale_fill_manual(values=hue_pal()(5)[1, 2, 4, 5])
p1 <- ggplot(counts) + geom_bar(aes(x="", y=n, fill=parking_type), stat="identity", width=1) + coord_polar("y", start=0) + theme_void() + labs(title="Over-The-Rhine Parking Distribution", fill="Parking Type") + theme(plot.title = element_text(hjust = 0.5)) + scale_fill_manual(values=hue_pal()(5)[c(1, 2, 4, 5)])
plot_grid(p1, p2, align='v')
p1 <- ggplot(counts) + geom_bar(aes(x="", y=n, fill=parking_type), stat="identity", width=1) + coord_polar("y", start=0) + theme_void() + labs(title="Over-The-Rhine Parking Distribution", fill="Parking Type") + theme(plot.title = element_text(hjust = 0.5), legend.position="none") + scale_fill_manual(values=hue_pal()(4))
cbddata <- data %>% filter(Entry_dummy=TRUE, !location %in% c("Mercer", "Washington Park", "Ziegler", "Fountain Square"), !parking_type=="Pay On Entry")
cbdcounts <- cbddata %>% group_by(parking_type) %>% summarize(n=n())
p2 <- ggplot(cbdcounts) + geom_bar(aes(x="", y=n, fill=parking_type), stat="identity", width=1) + coord_polar("y", start=0) + theme_void() + labs(title="Central Business District Parking Distribution", fill="Parking Type") + theme(plot.title = element_text(hjust = 0.5)) + scale_fill_manual(values=hue_pal()(4))
plot_grid(p1, p2, align='v')
p1 <- ggplot(counts) + geom_bar(aes(x="", y=n, fill=parking_type), stat="identity", width=1) + coord_polar("y", start=0) + theme_void() + labs(title="Over-The-Rhine Parking Distribution", fill="Parking Type") + theme(plot.title = element_text(hjust = 0.5), legend.position="none") + scale_fill_manual(values=hue_pal()(5))
cbddata <- data %>% filter(Entry_dummy=TRUE, !location %in% c("Mercer", "Washington Park", "Ziegler", "Fountain Square"), !parking_type=="Pay On Entry")
cbdcounts <- cbddata %>% group_by(parking_type) %>% summarize(n=n())
p2 <- ggplot(cbdcounts) + geom_bar(aes(x="", y=n, fill=parking_type), stat="identity", width=1) + coord_polar("y", start=0) + theme_void() + labs(title="Central Business District Parking Distribution", fill="Parking Type") + theme(plot.title = element_text(hjust = 0.5)) + scale_fill_manual(values=hue_pal()(5))
plot_grid(p1, p2, align='v')
p1 <- ggplot(counts) + geom_bar(aes(x="", y=n, fill=parking_type), stat="identity", width=1) + coord_polar("y", start=0) + theme_void() + labs(title="Over-The-Rhine Parking Distribution", fill="Parking Type") + theme(plot.title = element_text(hjust = 0.5), legend.position="none") + scale_fill_manual(values=hue_pal()(4))
cbddata <- data %>% filter(Entry_dummy=TRUE, !location %in% c("Mercer", "Washington Park", "Ziegler", "Fountain Square"), !parking_type=="Pay On Entry")
cbdcounts <- cbddata %>% group_by(parking_type) %>% summarize(n=n())
p2 <- ggplot(cbdcounts) + geom_bar(aes(x="", y=n, fill=parking_type), stat="identity", width=1) + coord_polar("y", start=0) + theme_void() + labs(title="Central Business District Parking Distribution", fill="Parking Type") + theme(plot.title = element_text(hjust = 0.5)) + scale_fill_manual(values=hue_pal()(4))
plot_grid(p1, p2, align='v')
ggplot(grouped_sales_data2, aes(x = Month, y = sales, fill = as.factor(after_additions))) +
geom_col(color='black') +  # scatter plot of actual data
geom_smooth(method = "lm", se = FALSE, aes(color = as.factor(after_additions))) +  # regression lines
scale_fill_manual(name = "After Additions",
values = c("0" = "blue", "1" = "red"),
labels = c("Before", "After")) +
theme_minimal() +
scale_color_manual(name="After Additions", values=c("blue", "red")) +
labs(title = "Sales Over Time with Regression Discontinuity",
x = "Month",
y = "Sales")
ggplot(grouped_sales_data2, aes(x = Month, y = sales, fill = as.factor(after_additions))) +
geom_col(outline='black') +  # scatter plot of actual data
geom_smooth(method = "lm", se = FALSE, aes(color = as.factor(after_additions))) +  # regression lines
scale_fill_manual(name = "After Additions",
values = c("0" = "blue", "1" = "red"),
labels = c("Before", "After")) +
theme_minimal() +
scale_color_manual(name="After Additions", values=c("blue", "red")) +
labs(title = "Sales Over Time with Regression Discontinuity",
x = "Month",
y = "Sales")
ggplot(grouped_sales_data2, aes(x = Month, y = sales, fill = as.factor(after_additions))) +
geom_col(outline='black') +  # scatter plot of actual data
geom_smooth(method = "lm", se = FALSE, aes(color = as.factor(after_additions))) +  # regression lines
scale_fill_manual(name = "After Additions",
values = c("0" = hue_pal()(2)[0], "1" = hue_pal()(2)[1]),
labels = c("Before", "After")) +
theme_minimal() +
scale_color_manual(name="After Additions", values=c("blue", "red")) +
labs(title = "Sales Over Time with Regression Discontinuity",
x = "Month",
y = "Sales")
ggplot(grouped_sales_data2, aes(x = Month, y = sales, fill = as.factor(after_additions))) +
geom_col(outline='black') +  # scatter plot of actual data
geom_smooth(method = "lm", se = FALSE, aes(color = as.factor(after_additions))) +  # regression lines
scale_fill_manual(name = "After Additions",
values = c("0" = hue_pal()(2)[0], "1" = hue_pal()(2)[1]),
labels = c("Before", "After")) +
theme_minimal() +
scale_color_manual(name="After Additions", values=hue_pal()(2)) +
labs(title = "Sales Over Time with Regression Discontinuity",
x = "Month",
y = "Sales")
ggplot(grouped_sales_data2, aes(x = Month, y = sales, fill = as.factor(after_additions))) +
geom_col(color='black') +  # scatter plot of actual data
geom_smooth(method = "lm", se = FALSE, aes(color = as.factor(after_additions))) +  # regression lines
scale_fill_manual(name = "After Additions",
values = c("0" = hue_pal()(2)[1], "1" = hue_pal()(2)[2]),
labels = c("Before", "After")) +
theme_minimal() +
scale_color_manual(name="After Additions", values=hue_pal()(2)) +
labs(title = "Sales Over Time with Regression Discontinuity",
x = "Month",
y = "Sales")
ggplot(grouped_sales_data2, aes(x = Month, y = sales, fill = as.factor(after_additions))) +
geom_col() +  # scatter plot of actual data
geom_smooth(method = "lm", se = FALSE, aes(color = as.factor(after_additions))) +  # regression lines
scale_fill_manual(name = "After Additions",
values = c("0" = hue_pal()(2)[1], "1" = hue_pal()(2)[2]),
labels = c("Before", "After")) +
theme_minimal() +
scale_color_manual(name="After Additions", values=hue_pal()(2)) +
labs(title = "Sales Over Time with Regression Discontinuity",
x = "Month",
y = "Sales")
ggplot(grouped_sales_data2, aes(x = Month, y = sales, fill = as.factor(after_additions))) +
geom_col() +  # scatter plot of actual data
geom_smooth(method = "lm", se = FALSE, aes(color = as.factor(after_additions))) +  # regression lines
scale_fill_manual(name = "After Additions",
values = c("0" = hue_pal()(2)[1], "1" = hue_pal()(2)[2]),
labels = c("Before", "After")) +
theme_minimal() +
labs(title = "Sales Over Time with Regression Discontinuity",
x = "Month",
y = "Sales")
scale_color_manual(name="After Additions", values=hue_pal()(2)) +
ggplot(grouped_sales_data2, aes(x = Month, y = sales, fill = as.factor(after_additions))) +
geom_col() +  # scatter plot of actual data
geom_smooth(method = "lm", se = FALSE, aes(color = as.factor(after_additions))) +  # regression lines
scale_fill_manual(name = "After Additions",
values = c("0" = hue_pal()(2)[1], "1" = hue_pal()(2)[2]),
labels = c("Before", "After")) +
theme_minimal() +
scale_color_manual(name="After Additions", values=hue_pal()(2)) +
labs(title = "Sales Over Time with Regression Discontinuity",
x = "Month",
y = "Sales")
ggplot(grouped_sales_data2, aes(x = Month, y = sales, fill = as.factor(after_additions))) +
geom_col() +  # scatter plot of actual data
geom_smooth(method = "lm", se = FALSE, aes(color = as.factor(after_additions))) +  # regression lines
scale_fill_manual(name = "After Additions",
values = c("0" = hue_pal()(2)[1], "1" = hue_pal()(2)[2]),
labels = c("Before", "After")) +
theme_minimal() +
scale_color_manual(name="After Additions", values=hue_pal()(2)) +
labs(title = "Sales Over Time with Regression Discontinuity",
x = "Month",
y = "Sales")
ggplot(grouped_sales_data2, aes(x = Month, y = sales, fill = as.factor(after_additions))) +
geom_col() +  # scatter plot of actual data
geom_smooth(method = "lm", se = FALSE, aes(color = as.factor(after_additions))) +  # regression lines
theme_minimal() +
scale_color_manual(name="After Additions", values=hue_pal()(2)) +
labs(title = "Sales Over Time with Regression Discontinuity",
x = "Month",
y = "Sales")
geom_smooth(method = "lm", se = FALSE, aes() +  # regression lines
ggplot(grouped_sales_data2, aes(x = Month, y = sales, fill = as.factor(after_additions))) +
geom_col() +  # scatter plot of actual data
geom_smooth(method = "lm", se = FALSE )+  # regression lines
theme_minimal() +
scale_color_manual(name="After Additions", values=hue_pal()(2)) +
labs(title = "Sales Over Time with Regression Discontinuity",
x = "Month",
y = "Sales")
ggplot(grouped_sales_data2, aes(x = Month, y = sales, fill = as.factor(after_additions))) +
ggplot(grouped_sales_data2, aes(x = Month, y = sales, fill = as.factor(after_additions))) +
geom_col() +  # scatter plot of actual data
geom_smooth(method = "lm", se = FALSE)+  # regression lines
theme_minimal() +
scale_color_manual(name="After Additions", values=hue_pal()(2)) +
labs(title = "Sales Over Time with Regression Discontinuity",
x = "Month",
y = "Sales")
ggplot(grouped_sales_data2, aes(x = Month, y = sales, fill = as.factor(after_additions))) +
geom_col() +  # scatter plot of actual data
geom_smooth(method = "lm", se = FALSE)+  # regression lines
theme_minimal() +
geom_vline(aes(x="2023-03-01"))
ggplot(grouped_sales_data2, aes(x = Month, y = sales, fill = as.factor(after_additions))) +
geom_col() +  # scatter plot of actual data
geom_smooth(method = "lm", se = FALSE)+  # regression lines
theme_minimal() +
geom_vline(aes("2023-03-01")) +
scale_color_manual(name="After Additions", values=hue_pal()(2)) +
labs(title = "Sales Over Time with Regression Discontinuity",
x = "Month",
y = "Sales")
ggplot(grouped_sales_data2, aes(x = Month, y = sales, fill = as.factor(after_additions))) +
geom_col() +  # scatter plot of actual data
geom_smooth(method = "lm", se = FALSE)+  # regression lines
theme_minimal() +
geom_vline(aes(xintercept="2023-03-01")) +
scale_color_manual(name="After Additions", values=hue_pal()(2)) +
labs(title = "Sales Over Time with Regression Discontinuity",
x = "Month",
y = "Sales")
ggplot(grouped_sales_data2, aes(x = Month, y = sales, fill = as.factor(after_additions))) +
geom_col() +  # scatter plot of actual data
geom_smooth(method = "lm", se = FALSE)+  # regression lines
theme_minimal() +
geom_vline(aes(xintercept=10)) +
scale_color_manual(name="After Additions", values=hue_pal()(2)) +
labs(title = "Sales Over Time with Regression Discontinuity",
x = "Month",
y = "Sales")
ggplot(grouped_sales_data2, aes(x = Month, y = sales, fill = as.factor(after_additions))) +
geom_col() +  # scatter plot of actual data
geom_smooth(method = "lm", se = FALSE)+  # regression lines
theme_minimal() +
geom_vline(aes(xintercept=as.Date("2023-03-01"))) +
scale_color_manual(name="After Additions", values=hue_pal()(2)) +
labs(title = "Sales Over Time with Regression Discontinuity",
x = "Month",
y = "Sales")
ggplot(grouped_sales_data2, aes(x = Month, y = sales, fill = as.factor(after_additions))) +
geom_col() +  # scatter plot of actual data
geom_smooth(method = "lm", se = FALSE)+  # regression lines
theme_minimal() +
geom_vline(aes(xintercept=as.Date("2023-03-01"), dashed=T)) +
scale_color_manual(name="After Additions", values=hue_pal()(2)) +
labs(title = "Sales Over Time with Regression Discontinuity",
x = "Month",
y = "Sales")
ggplot(grouped_sales_data2, aes(x = Month, y = sales, fill = as.factor(after_additions))) +
geom_col() +  # scatter plot of actual data
geom_smooth(method = "lm", se = FALSE)+  # regression lines
theme_minimal() +
geom_vline(aes(xintercept=as.Date("2023-03-01"), color='grey', linetype='dashed')) +
scale_color_manual(name="After Additions", values=hue_pal()(2)) +
labs(title = "Sales Over Time with Regression Discontinuity",
x = "Month",
y = "Sales")
geom_vline(aes(xintercept=as.Date("2023-03-01" color='grey', linetype='dashed')) +
ggplot(grouped_sales_data2, aes(x = Month, y = sales, fill = as.factor(after_additions))) +
geom_col() +  # scatter plot of actual data
geom_smooth(method = "lm", se = FALSE)+  # regression lines
theme_minimal() +
geom_vline(aes(xintercept=as.Date("2023-03-01"), color='grey', linetype='dashed')) +
scale_color_manual(name="After Additions", values=hue_pal()(2)) +
labs(title = "Sales Over Time with Regression Discontinuity",
x = "Month",
y = "Sales")
ggplot(grouped_sales_data2, aes(x = Month, y = sales, fill = as.factor(after_additions))) +
geom_col() +  # scatter plot of actual data
geom_smooth(method = "lm", se = FALSE)+  # regression lines
theme_minimal() +
geom_vline(xintercept=as.Date("2023-03-01"), color='grey', linetype='dashed') +
scale_color_manual(name="After Additions", values=hue_pal()(2)) +
labs(title = "Sales Over Time with Regression Discontinuity",
x = "Month",
y = "Sales")
ggplot(grouped_sales_data2, aes(x = Month, y = sales, fill = as.factor(after_additions))) +
geom_col() +  # scatter plot of actual data
geom_smooth(method = "lm", se = FALSE)+  # regression lines
theme_minimal() +
geom_vline(xintercept=as.Date("2023-03-01"), color='grey', linetype='dashed') +
scale_fill_manual(name="After Additions", values=hue_pal()(2)) +
labs(title = "Sales Over Time with Regression Discontinuity",
x = "Month",
y = "Sales")
ggplot(grouped_sales_data2, aes(x = Month, y = sales, fill = as.factor(after_additions))) +
geom_col() +  # scatter plot of actual data
geom_smooth(method = "lm", se = FALSE)+  # regression lines
theme_minimal() +
geom_vline(xintercept=as.Date("2023-03-01"), color='grey', linetype='dashed') +
scale_fill_manual(name="After Renovations?", values=hue_pal()(2)) +
labs(title = "Sales Over Time with Regression Discontinuity",
x = "Month",
y = "Sales")
ggplot(grouped_sales_data2, aes(x = Month, y = sales, fill = as.factor(after_additions))) +
geom_col() +  # scatter plot of actual data
geom_smooth(method = "lm", se = FALSE)+  # regression lines
theme_minimal() +
geom_vline(xintercept=as.Date("2023-03-01"), color='grey', linetype='dashed') +
scale_fill_manual(name="After Renovations?", values=("0": hue_pal()(2)[1],"1": hue_pal()(2)[2])) +
ggplot(grouped_sales_data2, aes(x = Month, y = sales, fill = as.factor(after_additions))) +
geom_col() +  # scatter plot of actual data
geom_smooth(method = "lm", se = FALSE)+  # regression lines
theme_minimal() +
geom_vline(xintercept=as.Date("2023-03-01"), color='grey', linetype='dashed') +
scale_fill_manual(name="After Renovations?", values=("0"=hue_pal()(2)[1], "1"=hue_pal()(2)[2])) +
ggplot(grouped_sales_data2, aes(x = Month, y = sales, fill = as.factor(after_additions))) +
geom_col() +  # scatter plot of actual data
geom_smooth(method = "lm", se = FALSE)+  # regression lines
theme_minimal() +
geom_vline(xintercept=as.Date("2023-03-01"), color='grey', linetype='dashed') +
scale_fill_manual(name="After Renovations?", values=c("0"=hue_pal()(2)[1], "1"=hue_pal()(2)[2])) +
labs(title = "Sales Over Time with Regression Discontinuity",
x = "Month",
y = "Sales")
ggplot(grouped_sales_data2, aes(x = Month, y = sales, fill = as.factor(after_additions))) +
geom_col() +  # scatter plot of actual data
geom_smooth(method = "lm", se = FALSE)+  # regression lines
theme_minimal() +
geom_vline(xintercept=as.Date("2023-03-01"), color='grey', linetype='dashed') +
scale_fill_manual(name="After Renovations?", values=c("False"=hue_pal()(2)[1], "1"=hue_pal()(2)[2])) +
labs(title = "Sales Over Time with Regression Discontinuity",
x = "Month",
y = "Sales")
ggplot(grouped_sales_data2, aes(x = Month, y = sales, fill = as.factor(after_additions))) +
geom_col() +  # scatter plot of actual data
geom_smooth(method = "lm", se = FALSE)+  # regression lines
theme_minimal() +
geom_vline(xintercept=as.Date("2023-03-01"), color='grey', linetype='dashed') +
scale_fill_manual(name="After Renovations?", values=c("False"=hue_pal()(2)[1], "True"=hue_pal()(2)[2])) +
labs(title = "Sales Over Time with Regression Discontinuity",
x = "Month",
y = "Sales")
ggplot(grouped_sales_data2, aes(x = Month, y = sales, fill = as.factor(after_additions))) +
geom_col() +  # scatter plot of actual data
geom_smooth(method = "lm", se = FALSE)+  # regression lines
theme_minimal() +
geom_vline(xintercept=as.Date("2023-03-01"), color='grey', linetype='dashed') +
scale_fill_manual(name="After Renovations?", values=c("0"=hue_pal()(2)[1], "1"=hue_pal()(2)[2])) +
labs(title = "Sales Over Time with Regression Discontinuity",
x = "Month",
y = "Sales")
ggplot(grouped_sales_data2, aes(x = Month, y = sales, fill = as.factor(after_additions))) +
geom_col() +  # scatter plot of actual data
geom_smooth(method = "lm", se = FALSE)+  # regression lines
theme_minimal() +
geom_vline(xintercept=as.Date("2023-03-01"), color='grey', linetype='dashed') +
scale_fill_manual(name="After Renovations?", values=c("0"=hue_pal()(2)[1], "1"=hue_pal()(2)[2]), labels=c("False", "True")) +
labs(title = "Sales Over Time with Regression Discontinuity",
x = "Month",
y = "Sales")
ggplot(grouped_sales_data2, aes(x = Month, y = sales, fill = as.factor(after_additions))) +
geom_col() +  # scatter plot of actual data
geom_smooth(method = "lm", se = FALSE)+  # regression lines
theme_minimal() +
geom_vline(xintercept=as.Date("2023-03-01"), color='grey', linetype='dashed') +
scale_fill_manual(name="After Renovations?", values=c("0"=hue_pal()(2)[1], "1"=hue_pal()(2)[2]), labels=c("No", "Yes")) +
labs(title = "Sales Over Time with Regression Discontinuity",
x = "Month",
y = "Sales")
ggplot(grouped_sales_data2, aes(x = Month, y = sales, fill = as.factor(after_additions))) +
geom_col() +  # scatter plot of actual data
geom_smooth(method = "lm", se = FALSE)+  # regression lines
theme_minimal() +
geom_vline(xintercept=as.Date("2023-03-01"), color='grey', linetype='dashed') +
scale_fill_manual(name="After Renovations?", values=c("0"=hue_pal()(2)[1], "1"=hue_pal()(2)[2]), labels=c("No", "Yes")) +
labs(title = "Concession Sales Over Time with Regression Discontinuity",
x = "Month",
y = "Sales")
ggplot(grouped_sales_data2, aes(x = Month, y = sales, fill = as.factor(after_additions))) +
geom_col() +  # scatter plot of actual data
geom_smooth(method = "lm", se = FALSE)+  # regression lines
theme_minimal() +
geom_vline(xintercept=as.Date("2023-03-01"), color='grey', linetype='dashed') +
scale_fill_manual(name="After Renovations?", values=c("0"=hue_pal()(2)[1], "1"=hue_pal()(2)[2]), labels=c("No", "Yes")) +
labs(title = "Concession Sales Over Time after Parking Renovations",
x = "Month",
y = "Sales")
ggplot(grouped_sales_data2, aes(x=Month, y=sales)) + geom_col() + geom_abline(intercept=lm1$coefficients[1], slope=lm1$coefficients[2], size=1.5, color="red") + labs(x="Month", y="Total Sales (USD)") + scale_color_manual(name="Color",labels=c("Line of best fit"), values=c("red"))
ggplot(grouped_sales_data2, aes(x=Month, y=sales)) + geom_col()
ggplot(grouped_regular_data, aes(x=Month, y=n)) + geom_col()
ggplot(grouped_regular_data, aes(x=Month, y=n)) + geom_col() + labs(y="Total Parking Sales") + geomtitle("Total Parking Sales by Month in Over-The-Rhine")
ggplot(grouped_regular_data, aes(x=Month, y=n)) + geom_col() + labs(y="Total Parking Sales") + ggtitle("Total Parking Sales by Month in Over-The-Rhine")
ggplot(grouped_sales_data2, aes(x = Month, y = sales, fill = as.factor(after_additions))) +
geom_col() +  # scatter plot of actual data
geom_smooth(method = "lm", se = FALSE)+  # regression lines
theme_minimal() +
geom_vline(xintercept=as.Date("2023-03-01"), color='grey', linetype='dashed') +
scale_fill_manual(name="After Renovations?", values=c("0"=hue_pal()(2)[1], "1"=hue_pal()(2)[2]), labels=c("No", "Yes")) +
labs(title = "Concession Sales Over Time after Parking Renovations in Over-The-Rhine",
x = "Month",
y = "Sales")
ggplot(new_data) + geom_density(aes(x=intraday, fill="#FF6666"), alpha=.4) + scale_x_time() + geom_density(data=concession_data, mapping=aes(x = Time, fill="#6655FF"), alpha=.4) + labs(x="Time of day", y="Density of purchases", title="Concession Sales and Parking Purchases") + scale_fill_manual(name="Color",labels=c("Concession sales", "Transitive parking entries"), values=c("#FF6666", "#6655FF"))
ggplot(new_data) + geom_density(aes(x=intraday, fill="#FF6666"), alpha=.4) + scale_x_time() + geom_density(data=concession_data, mapping=aes(x = Time, fill="#6655FF"), alpha=.4) + labs(x="Time of day", y="Density of purchases", title="Concession Sales and Parking Entries") + scale_fill_manual(name="Color",labels=c("Concession sales", "Transitive parking entries"), values=c("#FF6666", "#6655FF"))
lm2 <- lm(sales ~ Month + after_additions, data=grouped_sales_data2)
stargazer(lm2, type='text')
lm2 <- lm(sales ~ Month + after_additions + Month:after_additions, data=grouped_sales_data2)
stargazer(lm2, type='text')
predict(lm2, grouped_sales_data2)
ggplot(grouped_sales_data2, aes(x = Month, y = sales, fill = as.factor(after_additions))) +
geom_col() +  # scatter plot of actual data
geom_smooth(method = "lm", se = FALSE)+  # regression lines
theme_minimal() +
geom_vline(xintercept=as.Date("2023-03-01"), color='grey', linetype='dashed') +
scale_fill_manual(name="After Renovations?", values=c("0"=hue_pal()(2)[1], "1"=hue_pal()(2)[2]), labels=c("No", "Yes")) +
labs(title = "Concession Sales Over Time after Parking Renovations in Over-The-Rhine",
x = "Month",
y = "Sales")
ggplot(grouped_sales_data2, aes(x=Month, y=sales)) + geom_col() + geom_abline(intercept=lm1$coefficients[1], slope=lm1$coefficients[2], size=1.5, color="red") + labs(x="Month", y="Total Sales (USD)") + scale_color_manual(name="Color",labels=c("Line of best fit"), values=c("red"))
ggplot(grouped_sales_data2, aes(x=Month, y=sales)) + geom_col() + geom_abline(intercept=lm1$coefficients[1], slope=lm1$coefficients[2], size=1.5, color="red") + labs(x="Month", y="Total Sales (USD)") + scale_color_manual(name="Color",labels=c("Line of best fit"), values=c("red"))
ggplot(grouped_sales_data2, aes(x=Month, y=sales)) + geom_col() + geom_abline(intercept=lm1$coefficients[1], slope=lm1$coefficients[2], size=1.5, color="#FF6666") + labs(x="Month", y="Total Sales (USD)") + scale_color_manual(name="Color",labels=c("Line of best fit"), values=c("red"))
ggplot(grouped_sales_data2, aes(x=Month, y=sales)) + geom_col() + geom_abline(intercept=lm1$coefficients[1], slope=lm1$coefficients[2], size=1.5, color="#FF6666") + labs(x="Month", y="Total Sales (USD)", title = "Concession Sales Over Time after Parking Renovations in Over-The-Rhine") + scale_color_manual(name="Color",labels=c("Line of best fit"), values=c("red"))
